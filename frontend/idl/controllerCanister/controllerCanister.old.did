type ProposeArg = 
 record {
   canister_id: opt Canister;
   code: opt blob;
   member: opt principal;
   operation: Operation;
 };
type Proposal = 
 record {
   approvers: vec principal;
   canister_id: opt Canister;
   code: opt blob;
   finished: bool;
   id: nat;
   member: opt principal;
   operation: Operation;
   proposer: principal;
 };
type Operation = 
 variant {
   addMember;
   createCanister;
   deleMember;
   deleteCanister;
   installCode;
   startCanister;
   stopCanister;
   uninstallCode;
 };
type Canister = principal;
service : {
  approve: (nat) -> (Proposal);
  get_owner: () -> (vec principal);
  get_principal: () -> (principal);
  get_propose: (nat) -> (opt Proposal);
  propose: (ProposeArg) -> (Proposal);
}
